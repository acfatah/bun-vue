{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "description": "Displays a button or a component that looks like a button.",
  "dependencies": [
    "reka-ui"
  ],
  "registryDependencies": [
    "http://localhost:8080/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/button/Button.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PrimitiveProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Primitive } from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport type { ButtonVariants } from '.'\nimport { buttonVariants } from '.'\n\ninterface Props extends PrimitiveProps {\n  variant?: ButtonVariants['variant']\n  size?: ButtonVariants['size']\n  class?: HTMLAttributes['class']\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  as: 'button',\n  asChild: false,\n})\n</script>\n\n<template>\n  <Primitive\n    data-slot=\"button\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :class=\"cn(buttonVariants({ variant, size }), props.class)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/button/index.ts",
      "content": "/**\n * Button\n *\n * Displays a button or a component that looks like a button.\n */\n\nimport type { VariantProps } from 'class-variance-authority'\nimport { cva } from 'class-variance-authority'\n\nexport { default as Button } from './Button.vue'\n\nexport const buttonVariants = cva(\n  `\n    inline-flex shrink-0 items-center justify-center gap-2 rounded-md text-sm font-medium\n    whitespace-nowrap transition-all outline-none\n    focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\n    disabled:pointer-events-none disabled:opacity-50\n    aria-invalid:border-destructive aria-invalid:ring-destructive/20\n    dark:aria-invalid:ring-destructive/40\n    [&_svg]:pointer-events-none [&_svg]:shrink-0\n    [&_svg:not([class*='size-'])]:size-4\n  `,\n\n  {\n    variants: {\n      variant: {\n        default:\n          `\n            bg-primary text-primary-foreground shadow-xs\n            hover:bg-primary/90\n          `,\n        destructive:\n          `\n            bg-destructive text-white shadow-xs\n            hover:bg-destructive/90\n            focus-visible:ring-destructive/20\n            dark:bg-destructive/60 dark:focus-visible:ring-destructive/40\n          `,\n        outline:\n          `\n            border bg-background shadow-xs\n            hover:bg-accent hover:text-accent-foreground\n            dark:border-input dark:bg-input/30 dark:hover:bg-input/50\n          `,\n        secondary:\n          `\n            bg-secondary text-secondary-foreground shadow-xs\n            hover:bg-secondary/80\n          `,\n        ghost:\n          `\n            hover:bg-accent hover:text-accent-foreground\n            dark:hover:bg-accent/50\n          `,\n        link: `\n          text-primary underline-offset-4\n          hover:underline\n        `,\n      },\n\n      size: {\n        xs: `\n          w-fit shrink-0 gap-1 rounded-sm px-2 py-0.5 text-xs\n          has-[>svg]:px-2.5\n          [&>svg]:size-3\n        `,\n        sm: `\n          h-8 gap-1.5 rounded-md px-3\n          has-[>svg]:px-2.5\n        `,\n        md: `\n          h-9 px-4 py-2\n          has-[>svg]:px-3\n        `,\n        lg: `\n          h-10 rounded-md px-6\n          has-[>svg]:px-4\n        `,\n        icon: 'size-9',\n      },\n    },\n\n    defaultVariants: {\n      variant: 'default',\n      size: 'md',\n    },\n  },\n)\n\nexport type ButtonVariants = VariantProps<typeof buttonVariants>\n",
      "type": "registry:ui"
    }
  ]
}