{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "popover",
  "type": "registry:ui",
  "title": "Popover",
  "description": "Displays rich content in a portal, triggered by a button.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/acfatah/bun-vue/refs/heads/main/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/popover/PopoverAnchor.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PopoverAnchorProps } from 'reka-ui'\nimport { PopoverAnchor } from 'reka-ui'\n\nconst props = defineProps<PopoverAnchorProps>()\n</script>\n\n<template>\n  <PopoverAnchor\n    data-slot=\"popover-anchor\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </PopoverAnchor>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/popover/Popover.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PopoverRootEmits, PopoverRootProps } from 'reka-ui'\nimport { PopoverRoot, useForwardPropsEmits } from 'reka-ui'\nimport { ref } from 'vue'\n\nconst props = defineProps<PopoverRootProps>()\nconst emits = defineEmits<PopoverRootEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst open = ref(false)\n\nfunction setOpen(value: boolean) {\n  open.value = value\n}\n</script>\n\n<template>\n  <PopoverRoot\n    v-bind=\"forwarded\"\n    v-model:open=\"open\"\n    data-slot=\"popover\"\n  >\n    <slot v-bind=\"{ open, setOpen }\" />\n  </PopoverRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/popover/PopoverTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PopoverTriggerProps } from 'reka-ui'\nimport { PopoverTrigger } from 'reka-ui'\n\nconst props = defineProps<PopoverTriggerProps>()\n</script>\n\n<template>\n  <PopoverTrigger\n    data-slot=\"popover-trigger\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </PopoverTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/popover/PopoverContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PopoverContentEmits, PopoverContentProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { PopoverContent, PopoverPortal, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<PopoverContentProps & {\n  class?: HTMLAttributes['class']\n}>(), {\n  align: 'start',\n  sideOffset: 4,\n})\n\nconst emits = defineEmits<PopoverContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <PopoverPortal>\n    <PopoverContent\n      data-slot=\"popover-content\"\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :class=\"cn(\n        `\n          z-50 w-72 origin-(--reka-popover-content-transform-origin) rounded-md border bg-popover\n          p-4 text-popover-foreground shadow-md outline-hidden\n          data-[side=bottom]:slide-in-from-top-2\n          data-[side=left]:slide-in-from-right-2\n          data-[side=right]:slide-in-from-left-2\n          data-[side=top]:slide-in-from-bottom-2\n          data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n          data-[state=closed]:zoom-out-95\n          data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\n        `,\n        props.class,\n      )\"\n    >\n      <slot />\n    </PopoverContent>\n  </PopoverPortal>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/popover/index.ts",
      "content": "/**\n * Popover\n *\n * Displays rich content in a portal, triggered by a button.\n */\n\nexport { default as Popover } from './Popover.vue'\nexport { default as PopoverAnchor } from './PopoverAnchor.vue'\nexport { default as PopoverContent } from './PopoverContent.vue'\nexport { default as PopoverTrigger } from './PopoverTrigger.vue'\n",
      "type": "registry:ui"
    }
  ]
}