{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:ui",
  "title": "Dropdown Menu",
  "description": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
  "dependencies": [
    "reka-ui",
    "@iconify/vue",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/acfatah/bun-vue/refs/heads/main/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuTriggerProps } from 'reka-ui'\nimport { DropdownMenuTrigger, useForwardProps } from 'reka-ui'\n\nconst props = defineProps<DropdownMenuTriggerProps>()\nconst forwardedProps = useForwardProps(props)\n</script>\n\n<template>\n  <DropdownMenuTrigger\n    data-slot=\"dropdown-menu-trigger\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </DropdownMenuTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuSub.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSubEmits, DropdownMenuSubProps } from 'reka-ui'\nimport { DropdownMenuSub, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<DropdownMenuSubProps>()\nconst emits = defineEmits<DropdownMenuSubEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <DropdownMenuSub data-slot=\"dropdown-menu-sub\" v-bind=\"forwarded\">\n    <slot />\n  </DropdownMenuSub>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSubTriggerProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { DropdownMenuSubTrigger, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuSubTriggerProps & { class?: HTMLAttributes['class'], inset?: boolean }>()\n\nconst delegatedProps = reactiveOmit(props, 'class', 'inset')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <DropdownMenuSubTrigger\n    data-slot=\"dropdown-menu-sub-trigger\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      `\n        flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[inset]:pl-8\n        data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n    <Icon\n      icon=\"lucide:chevron-right\"\n      class=\"ml-auto\"\n    />\n  </DropdownMenuSubTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuGroupProps } from 'reka-ui'\nimport { DropdownMenuGroup } from 'reka-ui'\n\nconst props = defineProps<DropdownMenuGroupProps>()\n</script>\n\n<template>\n  <DropdownMenuGroup\n    data-slot=\"dropdown-menu-group\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </DropdownMenuGroup>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuCheckboxItemEmits, DropdownMenuCheckboxItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  DropdownMenuCheckboxItem,\n  DropdownMenuItemIndicator,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuCheckboxItemProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<DropdownMenuCheckboxItemEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <DropdownMenuCheckboxItem\n    data-slot=\"dropdown-menu-checkbox-item\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm\n        outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4\n      `,\n      props.class,\n    )\"\n  >\n    <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuItemIndicator>\n        <Icon icon=\"lucide:check\" />\n      </DropdownMenuItemIndicator>\n    </span>\n    <slot />\n  </DropdownMenuCheckboxItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuSeparator.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSeparatorProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { DropdownMenuSeparator } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuSeparatorProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <DropdownMenuSeparator\n    data-slot=\"dropdown-menu-separator\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(\n      '-mx-1 my-1 h-px bg-border',\n      props.class,\n    )\"\n  />\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuLabel.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuLabelProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { DropdownMenuLabel, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuLabelProps & {\n  class?: HTMLAttributes['class']\n  inset?: boolean\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class', 'inset')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <DropdownMenuLabel\n    data-slot=\"dropdown-menu-label\"\n    :data-inset=\"inset ? '' : undefined\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      `\n        px-2 py-1.5 text-sm font-medium\n        data-[inset]:pl-8\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </DropdownMenuLabel>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuSubContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSubContentEmits, DropdownMenuSubContentProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { DropdownMenuSubContent, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuSubContentProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<DropdownMenuSubContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <DropdownMenuSubContent\n    data-slot=\"dropdown-menu-sub-content\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        z-50 min-w-[8rem] origin-(--reka-dropdown-menu-content-transform-origin) overflow-hidden\n        rounded-md border bg-popover p-1 text-popover-foreground shadow-lg\n        data-[side=bottom]:slide-in-from-top-2\n        data-[side=left]:slide-in-from-right-2\n        data-[side=right]:slide-in-from-left-2\n        data-[side=top]:slide-in-from-bottom-2\n        data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n        data-[state=closed]:zoom-out-95\n        data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </DropdownMenuSubContent>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { DropdownMenuItem, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = withDefaults(defineProps<DropdownMenuItemProps & {\n  class?: HTMLAttributes['class']\n  inset?: boolean\n  variant?: 'default' | 'destructive'\n}>(), {\n  variant: 'default',\n})\n\nconst delegatedProps = reactiveOmit(props, 'inset', 'variant')\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <DropdownMenuItem\n    data-slot=\"dropdown-menu-item\"\n    :data-inset=\"inset ? '' : undefined\"\n    :data-variant=\"variant\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      `\n        relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm\n        outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n        data-[inset]:pl-8\n        data-[variant=destructive]:text-destructive-foreground\n        data-[variant=destructive]:focus:bg-destructive/10\n        data-[variant=destructive]:focus:text-destructive-foreground\n        dark:data-[variant=destructive]:focus:bg-destructive/40\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4 [&_svg:not([class*='text-'])]:text-muted-foreground\n        data-[variant=destructive]:*:[svg]:!text-destructive-foreground\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </DropdownMenuItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuContentEmits, DropdownMenuContentProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  DropdownMenuContent,\n  DropdownMenuPortal,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = withDefaults(defineProps<DropdownMenuContentProps & {\n  align?: 'start' | 'center' | 'end'\n  class?: HTMLAttributes['class']\n}>(), {\n  sideOffset: 4,\n  align: 'start',\n})\n\nconst emits = defineEmits<DropdownMenuContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <DropdownMenuPortal>\n    <DropdownMenuContent\n      data-slot=\"dropdown-menu-content\"\n      v-bind=\"forwarded\"\n      :class=\"cn(\n        `\n          z-50 max-h-(--reka-dropdown-menu-content-available-height) min-w-[8rem]\n          origin-(--reka-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto\n          rounded-md border bg-popover p-1 text-popover-foreground shadow-md\n          data-[side=bottom]:slide-in-from-top-2\n          data-[side=left]:slide-in-from-right-2\n          data-[side=right]:slide-in-from-left-2\n          data-[side=top]:slide-in-from-bottom-2\n          data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n          data-[state=closed]:zoom-out-95\n          data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\n        `,\n        props.class,\n      )\"\n    >\n      <slot />\n    </DropdownMenuContent>\n  </DropdownMenuPortal>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuRootEmits, DropdownMenuRootProps } from 'reka-ui'\nimport { DropdownMenuRoot, useForwardPropsEmits } from 'reka-ui'\nimport { ref } from 'vue'\n\nconst props = defineProps<DropdownMenuRootProps>()\nconst emits = defineEmits<DropdownMenuRootEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst open = ref(false)\n\nfunction setOpen(value: boolean) {\n  open.value = value\n}\n</script>\n\n<template>\n  <DropdownMenuRoot\n    v-bind=\"forwarded\"\n    v-model:open=\"open\"\n    data-slot=\"dropdown-menu\"\n  >\n    <slot v-bind=\"{ open, setOpen }\" />\n  </DropdownMenuRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n  DropdownMenuRadioGroupEmits,\n  DropdownMenuRadioGroupProps,\n} from 'reka-ui'\nimport {\n  DropdownMenuRadioGroup,\n  useForwardPropsEmits,\n} from 'reka-ui'\n\nconst props = defineProps<DropdownMenuRadioGroupProps>()\nconst emits = defineEmits<DropdownMenuRadioGroupEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <DropdownMenuRadioGroup\n    data-slot=\"dropdown-menu-radio-group\"\n    v-bind=\"forwarded\"\n  >\n    <slot />\n  </DropdownMenuRadioGroup>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuRadioItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuRadioItemEmits, DropdownMenuRadioItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  DropdownMenuItemIndicator,\n  DropdownMenuRadioItem,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuRadioItemProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<DropdownMenuRadioItemEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <DropdownMenuRadioItem\n    data-slot=\"dropdown-menu-radio-item\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm\n        outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4\n      `,\n      props.class,\n    )\"\n  >\n    <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuItemIndicator>\n        <Icon\n          icon=\"lucide:circle\"\n          class=\"\n            size-2\n            [&>circle]:fill-current\n          \"\n        />\n      </DropdownMenuItemIndicator>\n    </span>\n    <slot />\n  </DropdownMenuRadioItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/DropdownMenuShortcut.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <span\n    data-slot=\"dropdown-menu-shortcut\"\n    :class=\"cn(\n      'ml-auto text-xs tracking-widest text-muted-foreground',\n      props.class,\n    )\"\n  >\n    <slot />\n  </span>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/dropdown-menu/index.ts",
      "content": "/**\n * Dropdown Menu\n *\n * Displays a menu to the user — such as a set of actions or functions — triggered\n * by a button.\n */\n\nexport { default as DropdownMenu } from './DropdownMenu.vue'\nexport { default as DropdownMenuCheckboxItem } from './DropdownMenuCheckboxItem.vue'\nexport { default as DropdownMenuContent } from './DropdownMenuContent.vue'\nexport { default as DropdownMenuGroup } from './DropdownMenuGroup.vue'\nexport { default as DropdownMenuItem } from './DropdownMenuItem.vue'\nexport { default as DropdownMenuLabel } from './DropdownMenuLabel.vue'\nexport { default as DropdownMenuRadioGroup } from './DropdownMenuRadioGroup.vue'\nexport { default as DropdownMenuRadioItem } from './DropdownMenuRadioItem.vue'\nexport { default as DropdownMenuSeparator } from './DropdownMenuSeparator.vue'\nexport { default as DropdownMenuShortcut } from './DropdownMenuShortcut.vue'\nexport { default as DropdownMenuSub } from './DropdownMenuSub.vue'\nexport { default as DropdownMenuSubContent } from './DropdownMenuSubContent.vue'\nexport { default as DropdownMenuSubTrigger } from './DropdownMenuSubTrigger.vue'\nexport { default as DropdownMenuTrigger } from './DropdownMenuTrigger.vue'\nexport { DropdownMenuPortal } from 'reka-ui'\n",
      "type": "registry:ui"
    }
  ]
}