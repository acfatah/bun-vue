{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "title": "Badge",
  "description": "Displays a badge or a component that looks like a badge.",
  "dependencies": [
    "@vueuse/core",
    "reka-ui"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/acfatah/bun-vue/refs/heads/main/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/badge/Badge.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { Primitive } from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport type { BadgeVariants } from '.'\nimport { badgeVariants } from '.'\n\nconst props = withDefaults(defineProps<{\n  variant?: BadgeVariants['variant']\n  class?: HTMLAttributes['class']\n  as?: string\n}>(), {\n  as: 'span',\n})\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <Primitive\n    data-slot=\"badge\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(badgeVariants({ variant }), props.class)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/badge/index.ts",
      "content": "/**\n * Badge\n *\n * Displays a badge or a component that looks like a badge.\n */\n\nimport type { VariantProps } from 'class-variance-authority'\nimport { cva } from 'class-variance-authority'\n\nexport { default as Badge } from './Badge.vue'\n\nexport const badgeVariants = cva(\n  `\n    inline-flex w-fit shrink-0 items-center justify-center gap-1 overflow-hidden rounded-md border\n    px-2 py-0.5 text-xs font-medium whitespace-nowrap transition-[color,box-shadow]\n    focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\n    aria-invalid:border-destructive aria-invalid:ring-destructive/20\n    dark:aria-invalid:ring-destructive/40\n    [&>svg]:pointer-events-none [&>svg]:size-3\n  `,\n  {\n    variants: {\n      variant: {\n        default:\n          `\n            border-transparent bg-primary text-primary-foreground\n            [a&]:hover:bg-primary/90\n          `,\n        secondary:\n          `\n            border-transparent bg-secondary text-secondary-foreground\n            [a&]:hover:bg-secondary/90\n          `,\n        destructive:\n          `\n            border-transparent bg-destructive text-white\n            focus-visible:ring-destructive/20\n            dark:bg-destructive/60 dark:focus-visible:ring-destructive/40\n            [a&]:hover:bg-destructive/90\n          `,\n        outline:\n          `\n            text-foreground\n            [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\n          `,\n\n        success:\n          `\n            border-success-foreground/40 bg-success text-success-foreground\n            [a&]:hover:bg-success/90\n          `,\n        warning:\n          `\n            border-warning-foreground/40 bg-warning text-warning-foreground\n            [a&]:hover:bg-warning/90\n          `,\n        info:\n          `\n            border-info-foreground/40 bg-info text-info-foreground\n            [a&]:hover:bg-info/90\n          `,\n        error:\n          `\n            border-error-foreground/40 bg-error text-error-foreground\n            [a&]:hover:bg-error/90\n          `,\n      },\n    },\n\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nexport type BadgeVariants = VariantProps<typeof badgeVariants>\n",
      "type": "registry:ui"
    }
  ]
}