{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "title": "Select",
  "description": "Displays a list of options for the user to pick fromâ€”triggered by a button.",
  "dependencies": [
    "reka-ui",
    "@iconify/vue",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/acfatah/bun-vue/refs/heads/main/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/select/SelectScrollDownButton.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectScrollDownButtonProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { SelectScrollDownButton, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectScrollDownButtonProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectScrollDownButton\n    data-slot=\"select-scroll-down-button\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      'flex cursor-default items-center justify-center py-1',\n      props.class,\n    )\"\n  >\n    <slot>\n      <Icon icon=\"lucide:chevron-down\" />\n    </slot>\n  </SelectScrollDownButton>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectScrollUpButton.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectScrollUpButtonProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { SelectScrollUpButton, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectScrollUpButtonProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectScrollUpButton\n    data-slot=\"select-scroll-up-button\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      'flex cursor-default items-center justify-center py-1',\n      props.class,\n    )\"\n  >\n    <slot>\n      <Icon icon=\"lucide:chevron-up\" />\n    </slot>\n  </SelectScrollUpButton>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectGroupProps } from 'reka-ui'\nimport { SelectGroup } from 'reka-ui'\n\nconst props = defineProps<SelectGroupProps>()\n</script>\n\n<template>\n  <SelectGroup\n    data-slot=\"select-group\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </SelectGroup>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectLabel.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectLabelProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { SelectLabel } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectLabelProps & {\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <SelectLabel\n    data-slot=\"select-label\"\n    :class=\"cn('px-2 py-1.5 text-xs text-muted-foreground', props.class)\"\n  >\n    <slot />\n  </SelectLabel>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectContentEmits, SelectContentProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  SelectContent,\n  SelectPortal,\n  SelectViewport,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport { SelectScrollDownButton, SelectScrollUpButton } from '.'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SelectContentProps & {\n  class?: HTMLAttributes['class']\n}>(), {\n  position: 'popper',\n})\n\nconst emits = defineEmits<SelectContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <SelectPortal>\n    <SelectContent\n      data-slot=\"select-content\"\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :class=\"cn(\n        `\n          relative z-50 max-h-(--reka-select-content-available-height) overflow-x-hidden\n          overflow-y-auto rounded-md border bg-popover text-popover-foreground shadow-md\n          data-[side=bottom]:slide-in-from-top-2\n          data-[side=left]:slide-in-from-right-2\n          data-[side=right]:slide-in-from-left-2\n          data-[side=top]:slide-in-from-bottom-2\n          data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n          data-[state=closed]:zoom-out-95\n          data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\n        `,\n        position === 'popper'\n          && `\n            data-[side=bottom]:translate-y-1\n            data-[side=left]:-translate-x-1\n            data-[side=right]:translate-x-1\n            data-[side=top]:-translate-y-1\n          `,\n        props.class,\n      )\n      \"\n    >\n      <SelectScrollUpButton />\n      <SelectViewport\n        :class=\"cn(\n          'p-1',\n          position === 'popper' && `\n            h-(--reka-select-trigger-height) w-full min-w-(--reka-select-trigger-width) scroll-my-1\n          `,\n        )\"\n      >\n        <slot />\n      </SelectViewport>\n      <SelectScrollDownButton />\n    </SelectContent>\n  </SelectPortal>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  SelectItem,\n  SelectItemIndicator,\n  SelectItemText,\n  useForwardProps,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectItemProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectItem\n    data-slot=\"select-item\"\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        `\n          relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm\n          outline-hidden select-none\n          focus:bg-accent focus:text-accent-foreground\n          data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n          [&_svg]:pointer-events-none [&_svg]:shrink-0\n          [&_svg:not([class*='size-'])]:size-4 [&_svg:not([class*='text-'])]:text-muted-foreground\n          *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\n        `,\n        props.class,\n      )\n    \"\n  >\n    <span class=\"absolute right-2 flex size-3.5 items-center justify-center\">\n      <SelectItemIndicator>\n        <Icon icon=\"lucide:check\" />\n      </SelectItemIndicator>\n    </span>\n\n    <SelectItemText>\n      <slot />\n    </SelectItemText>\n  </SelectItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectTriggerProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { SelectIcon, SelectTrigger, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = withDefaults(defineProps<SelectTriggerProps & {\n  class?: HTMLAttributes['class']\n  size?: 'sm' | 'default'\n}>(), {\n  size: 'default',\n})\n\nconst delegatedProps = reactiveOmit(props, 'class', 'size')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectTrigger\n    data-slot=\"select-trigger\"\n    :data-size=\"size\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      `\n        flex w-full items-center justify-between gap-2 rounded-md border border-input bg-transparent\n        px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none\n        focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\n        disabled:cursor-not-allowed disabled:opacity-50\n        aria-invalid:border-destructive aria-invalid:ring-destructive/20\n        data-[placeholder]:text-muted-foreground\n        data-[size=default]:h-9\n        data-[size=sm]:h-8\n        *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex\n        *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2\n        dark:bg-input/30 dark:hover:bg-input/50 dark:aria-invalid:ring-destructive/40\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4 [&_svg:not([class*='text-'])]:text-muted-foreground\n        [&[data-state=open]>svg]:rotate-180\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n    <SelectIcon as-child>\n      <Icon icon=\"lucide:chevron-down\" class=\"size-4 opacity-50 transition-transform duration-200\" />\n    </SelectIcon>\n  </SelectTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/Select.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectRootEmits, SelectRootProps } from 'reka-ui'\nimport { SelectRoot, useForwardPropsEmits } from 'reka-ui'\nimport { ref } from 'vue'\n\nconst props = defineProps<SelectRootProps>()\nconst emits = defineEmits<SelectRootEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst open = ref(false)\n\nfunction setOpen(value: boolean) {\n  open.value = value\n}\n</script>\n\n<template>\n  <SelectRoot\n    v-bind=\"forwarded\"\n    v-model:open=\"open\"\n    data-slot=\"select\"\n  >\n    <slot v-bind=\"{ open, setOpen }\" />\n  </SelectRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectValue.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectValueProps } from 'reka-ui'\nimport { SelectValue } from 'reka-ui'\n\nconst props = defineProps<SelectValueProps>()\n</script>\n\n<template>\n  <SelectValue\n    data-slot=\"select-value\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </SelectValue>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectItemText.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectItemTextProps } from 'reka-ui'\nimport { SelectItemText } from 'reka-ui'\n\nconst props = defineProps<SelectItemTextProps>()\n</script>\n\n<template>\n  <SelectItemText\n    data-slot=\"select-item-text\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </SelectItemText>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/SelectSeparator.vue",
      "content": "<script setup lang=\"ts\">\nimport type { SelectSeparatorProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { SelectSeparator } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectSeparatorProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <SelectSeparator\n    data-slot=\"select-separator\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(\n      'pointer-events-none -mx-1 my-1 h-px bg-border',\n      props.class,\n    )\"\n  />\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/select/index.ts",
      "content": "/**\n * Select\n *\n * Displays a list of options for the user to pick fromâ€”triggered by a button.\n */\n\nexport { default as Select } from './Select.vue'\nexport { default as SelectContent } from './SelectContent.vue'\nexport { default as SelectGroup } from './SelectGroup.vue'\nexport { default as SelectItem } from './SelectItem.vue'\nexport { default as SelectItemText } from './SelectItemText.vue'\nexport { default as SelectLabel } from './SelectLabel.vue'\nexport { default as SelectScrollDownButton } from './SelectScrollDownButton.vue'\nexport { default as SelectScrollUpButton } from './SelectScrollUpButton.vue'\nexport { default as SelectSeparator } from './SelectSeparator.vue'\nexport { default as SelectTrigger } from './SelectTrigger.vue'\nexport { default as SelectValue } from './SelectValue.vue'\n",
      "type": "registry:ui"
    }
  ]
}