{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "navigation-menu",
  "type": "registry:ui",
  "title": "Navigation Menu",
  "description": "A collection of links for navigating websites.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core",
    "@iconify/vue"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/acfatah/bun-vue/refs/heads/main/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuItem } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<NavigationMenuItemProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <NavigationMenuItem\n    data-slot=\"navigation-menu-item\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn('relative', props.class)\"\n  >\n    <slot />\n  </NavigationMenuItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuIndicator.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuIndicatorProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuIndicator, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<NavigationMenuIndicatorProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <NavigationMenuIndicator\n    data-slot=\"navigation-menu-indicator\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      `\n        top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden\n        data-[state=hidden]:animate-out data-[state=hidden]:fade-out\n        data-[state=visible]:animate-in data-[state=visible]:fade-in\n      `,\n      props.class,\n    )\"\n  >\n    <div class=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuIndicator>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuRootEmits, NavigationMenuRootProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuRoot, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport NavigationMenuViewport from './NavigationMenuViewport.vue'\n\nconst props = withDefaults(defineProps<NavigationMenuRootProps & {\n  class?: HTMLAttributes['class']\n  viewport?: boolean\n}>(), {\n  viewport: true,\n})\n\nconst emits = defineEmits<NavigationMenuRootEmits>()\nconst delegatedProps = reactiveOmit(props, 'class', 'viewport')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <NavigationMenuRoot\n    data-slot=\"navigation-menu\"\n    :data-viewport=\"viewport\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      'group/navigation-menu relative flex max-w-max flex-1 items-center justify-center',\n      props.class,\n    )\"\n  >\n    <slot />\n    <NavigationMenuViewport v-if=\"viewport\" />\n  </NavigationMenuRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuLink.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuLinkEmits, NavigationMenuLinkProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuLink, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<NavigationMenuLinkProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<NavigationMenuLinkEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <NavigationMenuLink\n    data-slot=\"navigation-menu-link\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        flex flex-col gap-1 rounded-sm p-2 text-sm ring-ring/10 outline-ring/50\n        transition-[color,box-shadow]\n        hover:bg-accent hover:text-accent-foreground\n        focus:bg-accent focus:text-accent-foreground\n        focus-visible:ring-4 focus-visible:outline-1\n        data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground\n        data-[active=true]:hover:bg-accent data-[active=true]:focus:bg-accent\n        dark:ring-ring/20 dark:outline-ring/40\n        [&_svg:not([class*='size-'])]:size-4 [&_svg:not([class*='text-'])]:text-muted-foreground\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </NavigationMenuLink>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuViewport.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuViewportProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuViewport, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<NavigationMenuViewportProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <div class=\"absolute top-full left-0 isolate z-50 flex justify-center\">\n    <NavigationMenuViewport\n      data-slot=\"navigation-menu-viewport\"\n      v-bind=\"forwardedProps\"\n      :class=\"cn(\n        `\n          origin-top-center relative mt-1.5 h-[var(--reka-navigation-menu-viewport-height)] w-full\n          overflow-hidden rounded-md border bg-popover text-popover-foreground shadow\n          data-[state=closed]:animate-out data-[state=closed]:zoom-out-95\n          data-[state=open]:animate-in data-[state=open]:zoom-in-90\n          md:w-[var(--reka-navigation-menu-viewport-width)]\n        `,\n        props.class,\n      )\"\n    />\n  </div>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuTriggerProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuTrigger, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport { navigationMenuTriggerStyle } from '.'\n\nconst props = defineProps<NavigationMenuTriggerProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <NavigationMenuTrigger\n    data-slot=\"navigation-menu-trigger\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(navigationMenuTriggerStyle(), 'group', props.class)\"\n  >\n    <slot />\n    <Icon\n      icon=\"lucide:chevron-down\"\n      class=\"\n        relative top-px ml-1 transition duration-300\n        group-data-[state=open]:rotate-180\n      \"\n    />\n  </NavigationMenuTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuContentEmits, NavigationMenuContentProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuContent, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<NavigationMenuContentProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<NavigationMenuContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <NavigationMenuContent\n    data-slot=\"navigation-menu-content\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        top-0 left-0 w-full p-2 pr-2.5\n        group-data-[viewport=false]/navigation-menu:top-full\n        group-data-[viewport=false]/navigation-menu:mt-1.5\n        group-data-[viewport=false]/navigation-menu:overflow-hidden\n        group-data-[viewport=false]/navigation-menu:rounded-md\n        group-data-[viewport=false]/navigation-menu:border\n        group-data-[viewport=false]/navigation-menu:bg-popover\n        group-data-[viewport=false]/navigation-menu:text-popover-foreground\n        group-data-[viewport=false]/navigation-menu:shadow\n        group-data-[viewport=false]/navigation-menu:duration-200\n        data-[motion=from-end]:slide-in-from-right-52\n        data-[motion=from-start]:slide-in-from-left-52\n        data-[motion=to-end]:slide-out-to-right-52\n        data-[motion=to-start]:slide-out-to-left-52\n        data-[motion^=from-]:animate-in data-[motion^=from-]:fade-in\n        data-[motion^=to-]:animate-out data-[motion^=to-]:fade-out\n        **:data-[slot=navigation-menu-link]:focus:ring-0\n        **:data-[slot=navigation-menu-link]:focus:outline-none\n        group-data-[viewport=false]/navigation-menu:data-[state=closed]:animate-out\n        group-data-[viewport=false]/navigation-menu:data-[state=closed]:fade-out-0\n        group-data-[viewport=false]/navigation-menu:data-[state=closed]:zoom-out-95\n        group-data-[viewport=false]/navigation-menu:data-[state=open]:animate-in\n        group-data-[viewport=false]/navigation-menu:data-[state=open]:fade-in-0\n        group-data-[viewport=false]/navigation-menu:data-[state=open]:zoom-in-95\n        md:absolute md:w-auto\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </NavigationMenuContent>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/index.ts",
      "content": "/**\n * Navigation Menu\n *\n * A collection of links for navigating websites.\n */\n\nimport { cva } from 'class-variance-authority'\n\nexport { default as NavigationMenu } from './NavigationMenu.vue'\nexport { default as NavigationMenuContent } from './NavigationMenuContent.vue'\nexport { default as NavigationMenuIndicator } from './NavigationMenuIndicator.vue'\nexport { default as NavigationMenuItem } from './NavigationMenuItem.vue'\nexport { default as NavigationMenuLink } from './NavigationMenuLink.vue'\nexport { default as NavigationMenuList } from './NavigationMenuList.vue'\nexport { default as NavigationMenuTrigger } from './NavigationMenuTrigger.vue'\nexport { default as NavigationMenuViewport } from './NavigationMenuViewport.vue'\n\nexport const navigationMenuTriggerStyle = cva(\n  `\n    group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2\n    text-sm font-medium transition-[color,box-shadow] outline-none\n    hover:bg-accent hover:text-accent-foreground\n    focus:bg-accent focus:text-accent-foreground\n    focus-visible:ring-[3px] focus-visible:ring-ring/50 focus-visible:outline-1\n    disabled:pointer-events-none disabled:opacity-50\n    data-[state=open]:bg-accent/50 data-[state=open]:text-accent-foreground\n    data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\n  `,\n)\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/navigation-menu/NavigationMenuList.vue",
      "content": "<script setup lang=\"ts\">\nimport type { NavigationMenuListProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { NavigationMenuList, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<NavigationMenuListProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <NavigationMenuList\n    data-slot=\"navigation-menu-list\"\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'group flex flex-1 list-none items-center justify-center gap-1',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </NavigationMenuList>\n</template>\n",
      "type": "registry:ui"
    }
  ]
}