{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "context-menu",
  "type": "registry:ui",
  "title": "Context Menu",
  "description": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core",
    "@iconify/vue"
  ],
  "registryDependencies": [
    "http://localhost:8080/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuShortcut.vue",
      "content": "<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <span\n    data-slot=\"context-menu-shortcut\"\n    :class=\"cn(\n      'ml-auto text-xs tracking-widest text-muted-foreground',\n      props.class,\n    )\"\n  >\n    <slot />\n  </span>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuItemEmits, ContextMenuItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ContextMenuItem, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport type { ContextMenuItemVariants } from '.'\nimport { contextMenuItemVariants } from '.'\n\nconst props = withDefaults(defineProps<ContextMenuItemProps & {\n  variant?: ContextMenuItemVariants['variant']\n  class?: HTMLAttributes['class']\n  inset?: boolean\n}>(), {\n  variant: 'default',\n})\n\nconst emits = defineEmits<ContextMenuItemEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <ContextMenuItem\n    data-slot=\"context-menu-item\"\n    :data-inset=\"inset ? '' : undefined\"\n    :data-variant=\"variant\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      contextMenuItemVariants({ variant }),\n      props.class,\n    )\"\n  >\n    <slot />\n  </ContextMenuItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuPortal.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuPortalProps } from 'reka-ui'\nimport { ContextMenuPortal } from 'reka-ui'\n\nconst props = defineProps<ContextMenuPortalProps>()\n</script>\n\n<template>\n  <ContextMenuPortal\n    data-slot=\"context-menu-portal\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </ContextMenuPortal>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuSubContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type { DropdownMenuSubContentEmits, DropdownMenuSubContentProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ContextMenuSubContent, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<DropdownMenuSubContentProps & { class?: HTMLAttributes['class'] }>()\nconst emits = defineEmits<DropdownMenuSubContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <ContextMenuSubContent\n    data-slot=\"context-menu-sub-content\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        z-50 min-w-[8rem] origin-(--reka-context-menu-content-transform-origin) overflow-hidden\n        rounded-md border bg-popover p-1 text-popover-foreground shadow-lg\n        data-[side=bottom]:slide-in-from-top-2\n        data-[side=left]:slide-in-from-right-2\n        data-[side=right]:slide-in-from-left-2\n        data-[side=top]:slide-in-from-bottom-2\n        data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n        data-[state=closed]:zoom-out-95\n        data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </ContextMenuSubContent>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuLabel.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuLabelProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ContextMenuLabel } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ContextMenuLabelProps & {\n  class?: HTMLAttributes['class']\n  inset?: boolean\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ContextMenuLabel\n    data-slot=\"context-menu-label\"\n    :data-inset=\"inset ? '' : undefined\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(\n      `\n        px-2 py-1.5 text-sm font-medium text-foreground\n        data-[inset]:pl-8\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </ContextMenuLabel>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuRadioItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuRadioItemEmits, ContextMenuRadioItemProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  ContextMenuItemIndicator,\n  ContextMenuRadioItem,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ContextMenuRadioItemProps & { class?: HTMLAttributes['class'] }>()\nconst emits = defineEmits<ContextMenuRadioItemEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <ContextMenuRadioItem\n    data-slot=\"context-menu-radio-item\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm\n        outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4\n      `,\n      props.class,\n    )\"\n  >\n    <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n      <ContextMenuItemIndicator>\n        <Icon\n          icon=\"lucide:circle\"\n          class=\"\n            size-2\n            [&>circle]:fill-current\n          \"\n        />\n      </ContextMenuItemIndicator>\n    </span>\n    <slot />\n  </ContextMenuRadioItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n  ContextMenuCheckboxItemEmits,\n  ContextMenuCheckboxItemProps,\n} from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  ContextMenuCheckboxItem,\n  ContextMenuItemIndicator,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ContextMenuCheckboxItemProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst emits = defineEmits<ContextMenuCheckboxItemEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <ContextMenuCheckboxItem\n    data-slot=\"context-menu-checkbox-item\"\n    v-bind=\"forwarded\"\n    :class=\"cn(\n      `\n        relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm\n        outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4\n      `,\n      props.class,\n    )\"\n  >\n    <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n      <ContextMenuItemIndicator>\n        <Icon icon=\"lucide:check\" class=\"fill-current\" />\n      </ContextMenuItemIndicator>\n    </span>\n    <slot />\n  </ContextMenuCheckboxItem>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuTriggerProps } from 'reka-ui'\nimport { ContextMenuTrigger, useForwardProps } from 'reka-ui'\n\nconst props = defineProps<ContextMenuTriggerProps>()\nconst forwardedProps = useForwardProps(props)\n</script>\n\n<template>\n  <ContextMenuTrigger\n    data-slot=\"context-menu-trigger\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </ContextMenuTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuSubTriggerProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ContextMenuSubTrigger, useForwardProps } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ContextMenuSubTriggerProps & {\n  class?: HTMLAttributes['class']\n  inset?: boolean\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <ContextMenuSubTrigger\n    data-slot=\"context-menu-sub-trigger\"\n    :data-inset=\"inset ? '' : undefined\"\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      `\n        flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none\n        focus:bg-accent focus:text-accent-foreground\n        data-[inset]:pl-8\n        data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\n        [&_svg]:pointer-events-none [&_svg]:shrink-0\n        [&_svg:not([class*='size-'])]:size-4\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n    <Icon\n      icon=\"lucide:chevron-right\"\n      class=\"ml-auto\"\n    />\n  </ContextMenuSubTrigger>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenu.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuRootEmits, ContextMenuRootProps } from 'reka-ui'\nimport { ContextMenuRoot, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<ContextMenuRootProps>()\nconst emits = defineEmits<ContextMenuRootEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <ContextMenuRoot\n    data-slot=\"context-menu\"\n    v-bind=\"forwarded\"\n  >\n    <slot />\n  </ContextMenuRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuGroupProps } from 'reka-ui'\nimport { ContextMenuGroup } from 'reka-ui'\n\nconst props = defineProps<ContextMenuGroupProps>()\n</script>\n\n<template>\n  <ContextMenuGroup\n    data-slot=\"context-menu-group\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </ContextMenuGroup>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuSeparator.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuSeparatorProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ContextMenuSeparator } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ContextMenuSeparatorProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ContextMenuSeparator\n    data-slot=\"context-menu-separator\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(\n      '-mx-1 my-1 h-px bg-border',\n      props.class,\n    )\"\n  />\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuRadioGroupEmits, ContextMenuRadioGroupProps } from 'reka-ui'\nimport { ContextMenuRadioGroup, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<ContextMenuRadioGroupProps>()\nconst emits = defineEmits<ContextMenuRadioGroupEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <ContextMenuRadioGroup\n    data-slot=\"context-menu-radio-group\"\n    v-bind=\"forwarded\"\n  >\n    <slot />\n  </ContextMenuRadioGroup>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuContent.vue",
      "content": "<script setup lang=\"ts\">\nimport type {\n  ContextMenuContentEmits,\n  ContextMenuContentProps,\n} from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport {\n  ContextMenuContent,\n  ContextMenuPortal,\n  useForwardPropsEmits,\n} from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ContextMenuContentProps & { class?: HTMLAttributes['class'] }>()\nconst emits = defineEmits<ContextMenuContentEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <ContextMenuPortal>\n    <ContextMenuContent\n      data-slot=\"context-menu-content\"\n      v-bind=\"forwarded\"\n      :class=\"cn(\n        `\n          z-50 max-h-(--reka-context-menu-content-available-height) min-w-[8rem]\n          origin-(--reka-context-menu-content-transform-origin) overflow-x-hidden overflow-y-auto\n          rounded-md border bg-popover p-1 text-popover-foreground shadow-md\n          data-[side=bottom]:slide-in-from-top-2\n          data-[side=left]:slide-in-from-right-2\n          data-[side=right]:slide-in-from-left-2\n          data-[side=top]:slide-in-from-bottom-2\n          data-[state=closed]:animate-out data-[state=closed]:fade-out-0\n          data-[state=closed]:zoom-out-95\n          data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\n        `,\n        props.class,\n      )\"\n    >\n      <slot />\n    </ContextMenuContent>\n  </ContextMenuPortal>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/ContextMenuSub.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ContextMenuSubEmits, ContextMenuSubProps } from 'reka-ui'\nimport { ContextMenuSub, useForwardPropsEmits } from 'reka-ui'\n\nconst props = defineProps<ContextMenuSubProps>()\nconst emits = defineEmits<ContextMenuSubEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <ContextMenuSub\n    data-slot=\"context-menu-sub\"\n    v-bind=\"forwarded\"\n  >\n    <slot />\n  </ContextMenuSub>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/context-menu/index.ts",
      "content": "/**\n * Context Menu\n *\n * Displays a menu to the user — such as a set of actions or functions — triggered\n * by a button.\n */\n\nimport type { VariantProps } from 'class-variance-authority'\nimport { cva } from 'class-variance-authority'\n\nexport { default as ContextMenu } from './ContextMenu.vue'\nexport { default as ContextMenuCheckboxItem } from './ContextMenuCheckboxItem.vue'\nexport { default as ContextMenuContent } from './ContextMenuContent.vue'\nexport { default as ContextMenuGroup } from './ContextMenuGroup.vue'\nexport { default as ContextMenuItem } from './ContextMenuItem.vue'\nexport { default as ContextMenuLabel } from './ContextMenuLabel.vue'\nexport { default as ContextMenuRadioGroup } from './ContextMenuRadioGroup.vue'\nexport { default as ContextMenuRadioItem } from './ContextMenuRadioItem.vue'\nexport { default as ContextMenuSeparator } from './ContextMenuSeparator.vue'\nexport { default as ContextMenuShortcut } from './ContextMenuShortcut.vue'\nexport { default as ContextMenuSub } from './ContextMenuSub.vue'\nexport { default as ContextMenuSubContent } from './ContextMenuSubContent.vue'\nexport { default as ContextMenuSubTrigger } from './ContextMenuSubTrigger.vue'\nexport { default as ContextMenuTrigger } from './ContextMenuTrigger.vue'\nexport { ContextMenuPortal } from 'reka-ui'\n\nexport const contextMenuItemVariants = cva(\n  `\n    relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden\n    select-none\n    data-[disabled]:pointer-events-none data-[disabled]:opacity-50\n    data-[inset]:pl-8\n    [&_svg]:pointer-events-none [&_svg]:shrink-0\n    [&_svg:not([class*='size-'])]:size-4 [&_svg:not([class*='text-'])]:text-muted-foreground\n    data-[variant=destructive]:*:[svg]:!text-destructive-foreground\n  `,\n\n  {\n    variants: {\n      variant: {\n        default: 'focus:bg-accent focus:text-accent-foreground',\n        destructive: `\n          text-destructive-foreground\n          focus:bg-destructive/10 focus:text-destructive-foreground\n          dark:focus:bg-destructive/40\n        `,\n      },\n    },\n\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nexport type ContextMenuItemVariants = VariantProps<typeof contextMenuItemVariants>\n",
      "type": "registry:ui"
    }
  ]
}