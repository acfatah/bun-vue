{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:ui",
  "title": "Toast",
  "description": "A succinct message that is displayed temporarily.",
  "dependencies": [
    "reka-ui",
    "@vueuse/core",
    "@iconify/vue"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/acfatah/bun-vue/refs/heads/main/public/r/utils.json"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/toast/ToastTitle.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastTitleProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ToastTitle } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ToastTitleProps & { class?: HTMLAttributes['class'] }>()\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ToastTitle\n    data-slot=\"toast-title\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(\n      `\n        text-sm font-semibold\n        [&+div]:text-xs\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </ToastTitle>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/ToastAction.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastActionProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ToastAction } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ToastActionProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ToastAction\n    v-bind=\"delegatedProps\"\n    data-slot=\"toast-action\"\n    :class=\"cn(\n      `\n        inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3\n        text-sm font-medium transition-colors\n        hover:bg-secondary\n        focus:ring-2 focus:ring-ring focus:outline-none\n        disabled:pointer-events-none disabled:opacity-50\n      `,\n      props.class,\n    )\"\n  >\n    <slot />\n  </ToastAction>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/Toaster.vue",
      "content": "<script setup lang=\"ts\">\nimport { isVNode } from 'vue'\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from '.'\nimport { useToast } from './use-toast'\n\nconst { toasts } = useToast()\n</script>\n\n<template>\n  <ToastProvider>\n    <Toast v-for=\"toast in toasts\" :key=\"toast.id\" v-bind=\"toast\">\n      <div class=\"flex w-full flex-col gap-1\">\n        <ToastTitle v-if=\"toast.title\">\n          {{ toast.title }}\n        </ToastTitle>\n        <template v-if=\"toast.description\">\n          <ToastDescription v-if=\"isVNode(toast.description)\">\n            <component :is=\"toast.description\" />\n          </ToastDescription>\n          <ToastDescription v-else>\n            {{ toast.description }}\n          </ToastDescription>\n        </template>\n        <ToastClose />\n      </div>\n      <component :is=\"toast.action\" />\n    </Toast>\n    <ToastViewport />\n  </ToastProvider>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/ToastProvider.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastProviderProps } from 'reka-ui'\nimport { ToastProvider } from 'reka-ui'\n\nconst props = defineProps<ToastProviderProps>()\n</script>\n\n<template>\n  <ToastProvider v-bind=\"props\">\n    <slot />\n  </ToastProvider>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/ToastDescription.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastDescriptionProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ToastDescription } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ToastDescriptionProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ToastDescription\n    data-slot=\"toast-description\"\n    :class=\"cn(\n      'text-sm opacity-90',\n      props.class,\n    )\"\n    v-bind=\"delegatedProps\"\n  >\n    <slot />\n  </ToastDescription>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/ToastClose.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastCloseProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ToastClose } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ToastCloseProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ToastClose\n    v-bind=\"delegatedProps\"\n    data-slot=\"toast-close\"\n    :class=\"cn(\n      `\n        absolute top-1 right-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity\n        group-hover:opacity-100\n        hover:cursor-pointer hover:text-foreground\n        focus:opacity-100 focus:ring-2 focus:outline-none\n      `,\n      props.class)\"\n  >\n    <Icon icon=\"lucide:x\" width=\"16\" height=\"16\" />\n  </ToastClose>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/Toast.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastRootEmits } from 'reka-ui'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ToastRoot, useForwardPropsEmits } from 'reka-ui'\nimport { cn } from '@/lib/utils'\nimport type { ToastProps } from '.'\nimport { toastVariants } from '.'\n\nconst props = defineProps<ToastProps>()\nconst emits = defineEmits<ToastRootEmits>()\nconst delegatedProps = reactiveOmit(props, 'class')\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <ToastRoot\n    v-bind=\"forwarded\"\n    :class=\"cn(toastVariants({ variant }), props.class)\"\n    @update:open=\"onOpenChange\"\n  >\n    <slot />\n  </ToastRoot>\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/use-toast.ts",
      "content": "import type { Component, VNode } from 'vue'\nimport { computed, h, ref, render, Teleport } from 'vue'\nimport type { ToastProps } from '.'\nimport Toaster from './Toaster.vue'\n\nconst TOAST_LIMIT = 5\nconst TOAST_REMOVE_DELAY = 1000000\n\nexport type StringOrVNode\n  = | string\n    | VNode\n    | (() => VNode)\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: string\n  description?: StringOrVNode\n  action?: Component\n}\n\nconst actionTypes = {\n  ADD_TOAST: 'ADD_TOAST',\n  UPDATE_TOAST: 'UPDATE_TOAST',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  REMOVE_TOAST: 'REMOVE_TOAST',\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action\n  = | {\n    type: ActionType['ADD_TOAST']\n    toast: ToasterToast\n  }\n  | {\n    type: ActionType['UPDATE_TOAST']\n    toast: Partial<ToasterToast>\n  }\n  | {\n    type: ActionType['DISMISS_TOAST']\n    toastId?: ToasterToast['id']\n  }\n  | {\n    type: ActionType['REMOVE_TOAST']\n    toastId?: ToasterToast['id']\n  }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nfunction addToRemoveQueue(toastId: string) {\n  if (toastTimeouts.has(toastId))\n    return\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: actionTypes.REMOVE_TOAST,\n      toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nconst state = ref<State>({\n  toasts: [],\n})\n\nfunction createToastContainerOnce() {\n  let toastContainer = document.getElementById('toaster-container')\n\n  if (!toastContainer) {\n    toastContainer = document.createElement('div')\n    toastContainer.id = 'toaster-container'\n    document.body.appendChild(toastContainer)\n\n    render(\n      h(Teleport, { to: 'body' }, [h(Toaster)]),\n      toastContainer,\n    )\n  }\n}\n\nfunction dispatch(action: Action) {\n  createToastContainerOnce()\n\n  switch (action.type) {\n    case actionTypes.ADD_TOAST:\n      state.value.toasts = [action.toast, ...state.value.toasts].slice(0, TOAST_LIMIT)\n      break\n\n    case actionTypes.UPDATE_TOAST:\n      state.value.toasts = state.value.toasts.map(t =>\n        t.id === action.toast.id ? { ...t, ...action.toast } : t,\n      )\n      break\n\n    case actionTypes.DISMISS_TOAST: {\n      const { toastId } = action\n\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      }\n      else {\n        state.value.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      state.value.toasts = state.value.toasts.map(t =>\n        t.id === toastId || toastId === undefined\n          ? {\n              ...t,\n              open: false,\n            }\n          : t,\n      )\n      break\n    }\n\n    case actionTypes.REMOVE_TOAST:\n      if (action.toastId === undefined)\n        state.value.toasts = []\n      else\n        state.value.toasts = state.value.toasts.filter(t => t.id !== action.toastId)\n\n      break\n  }\n}\n\nfunction useToast() {\n  return {\n    toasts: computed(() => state.value.toasts),\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\n  }\n}\n\ntype ToastOption = Omit<ToasterToast, 'id'>\ninterface ToastReturn {\n  id: string\n  dismiss: () => void\n  update: (props: ToasterToast) => void\n}\n\nfunction toast(props: ToastOption): ToastReturn\nfunction toast(title: string, description?: string): ToastReturn\n\nfunction toast(option: ToastOption | string, description?: string) {\n  const id = genId()\n  const props = typeof option === 'string' ? { title: option, description } : option\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: actionTypes.UPDATE_TOAST,\n      toast: { ...props, id },\n    })\n\n  const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id })\n\n  dispatch({\n    type: actionTypes.ADD_TOAST,\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open: boolean) => {\n        if (!open)\n          dismiss()\n      },\n    },\n  })\n\n  return {\n    id,\n    dismiss,\n    update,\n  }\n}\n\nexport { toast, useToast }\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/ToastViewport.vue",
      "content": "<script setup lang=\"ts\">\nimport type { ToastViewportProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { reactiveOmit } from '@vueuse/core'\nimport { ToastViewport } from 'reka-ui'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<ToastViewportProps & {\n  class?: HTMLAttributes['class']\n}>()\n\nconst delegatedProps = reactiveOmit(props, 'class')\n</script>\n\n<template>\n  <ToastViewport\n    data-slot=\"toast-viewport\"\n    v-bind=\"delegatedProps\"\n    :class=\"cn(\n      `\n        fixed top-0 left-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-y-2 p-4\n        sm:top-auto sm:right-0 sm:bottom-0 sm:left-auto sm:max-w-sm sm:flex-col\n      `,\n      props.class,\n    )\"\n  />\n</template>\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/components/ui/toast/index.ts",
      "content": "/**\n * Toast\n *\n * A succinct message that is displayed temporarily.\n */\n\nimport type { VariantProps } from 'class-variance-authority'\nimport type { ToastRootProps } from 'reka-ui'\nimport type { HTMLAttributes } from 'vue'\nimport { cva } from 'class-variance-authority'\n\nexport { default as Toast } from './Toast.vue'\nexport { default as ToastAction } from './ToastAction.vue'\nexport { default as ToastClose } from './ToastClose.vue'\nexport { default as ToastDescription } from './ToastDescription.vue'\nexport { default as Toaster } from './Toaster.vue'\nexport { default as ToastProvider } from './ToastProvider.vue'\nexport { default as ToastTitle } from './ToastTitle.vue'\nexport { default as ToastViewport } from './ToastViewport.vue'\nexport { toast, useToast } from './use-toast'\n\nexport const toastVariants = cva(\n  `\n    group pointer-events-auto relative flex w-full items-center justify-between space-x-2\n    overflow-hidden rounded-md border p-4 shadow-lg transition-all\n    data-[state=closed]:animate-out data-[state=closed]:fade-out-80\n    data-[state=closed]:slide-out-to-right-[125%]\n    data-[state=open]:animate-in data-[state=open]:slide-in-from-top-full\n    data-[swipe=cancel]:translate-x-0\n    data-[swipe=end]:translate-x-(--reka-toast-swipe-end-x) data-[swipe=end]:animate-out\n    data-[swipe=move]:translate-x-(--reka-toast-swipe-move-x) data-[swipe=move]:transition-none\n    data-[state=open]:sm:slide-in-from-bottom-full\n  `,\n\n  {\n    variants: {\n      variant: {\n        default: 'border bg-background text-foreground',\n        destructive:\n          `\n            border-destructive/50 bg-red-100 text-destructive\n            focus:border-destructive focus:ring-destructive focus:outline-destructive\n            dark:bg-red-900 dark:text-destructive\n            [&_[data-slot=toast-action]]:border-destructive\n            [&_[data-slot=toast-action]]:text-destructive\n            [&_[data-slot=toast-action]]:hover:bg-destructive/10\n            [&_[data-slot=toast-action]]:hover:text-destructive\n            [&_[data-slot=toast-action]]:focus:ring-destructive\n            [&_[data-slot=toast-close]]:text-destructive/50\n            [&_[data-slot=toast-close]]:hover:text-destructive\n            [&_[data-slot=toast-close]]:focus:ring-destructive\n          `,\n\n        // the following requires `styles/severity.css`\n        success:\n          `\n            border-success-foreground/40 bg-success/90 text-success-foreground\n            focus:border-success focus:ring-success focus:outline-success\n            [&_[data-slot=toast-action]]:border-success-foreground/40\n            [&_[data-slot=toast-action]]:text-success-foreground\n            [&_[data-slot=toast-action]]:hover:bg-success-foreground/10\n            [&_[data-slot=toast-action]]:hover:text-success-foreground\n            [&_[data-slot=toast-action]]:focus:ring-success-foreground/40\n            [&_[data-slot=toast-close]]:text-success-foreground/50\n            [&_[data-slot=toast-close]]:hover:text-success-foreground\n            [&_[data-slot=toast-close]]:focus:ring-success\n          `,\n\n        info:\n          `\n            border-info-foreground/40 bg-info/90 text-info-foreground\n            focus:border-info focus:ring-info focus:outline-info\n            [&_[data-slot=toast-action]]:border-info-foreground/40\n            [&_[data-slot=toast-action]]:text-info-foreground\n            [&_[data-slot=toast-action]]:hover:bg-info-foreground/10\n            [&_[data-slot=toast-action]]:hover:text-info-foreground\n            [&_[data-slot=toast-action]]:focus:ring-info-foreground/40\n            [&_[data-slot=toast-close]]:text-info-foreground/50\n            [&_[data-slot=toast-close]]:hover:text-info-foreground\n            [&_[data-slot=toast-close]]:focus:ring-info\n          `,\n\n        warning:\n          `\n            border-warning-foreground/40 bg-warning/90 text-warning-foreground\n            focus:border-warning focus:ring-warning focus:outline-warning\n            [&_[data-slot=toast-action]]:border-warning-foreground/40\n            [&_[data-slot=toast-action]]:text-warning-foreground\n            [&_[data-slot=toast-action]]:hover:bg-warning-foreground/10\n            [&_[data-slot=toast-action]]:hover:text-warning-foreground\n            [&_[data-slot=toast-action]]:focus:ring-warning-foreground/40\n            [&_[data-slot=toast-close]]:text-warning-foreground/50\n            [&_[data-slot=toast-close]]:hover:text-warning-foreground\n            [&_[data-slot=toast-close]]:focus:ring-warning\n          `,\n\n        error:\n          `\n            border-error-foreground/40 bg-error/90 text-error-foreground\n            focus:border-error focus:ring-error focus:outline-error\n            [&_[data-slot=toast-action]]:border-error-foreground/40\n            [&_[data-slot=toast-action]]:text-error-foreground\n            [&_[data-slot=toast-action]]:hover:bg-error-foreground/10\n            [&_[data-slot=toast-action]]:hover:text-error-foreground\n            [&_[data-slot=toast-action]]:focus:ring-error-foreground/40\n            [&_[data-slot=toast-close]]:text-error-foreground/50\n            [&_[data-slot=toast-close]]:hover:text-error-foreground\n            [&_[data-slot=toast-close]]:focus:ring-error\n          `,\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\ntype ToastVariants = VariantProps<typeof toastVariants>\n\nexport interface ToastProps extends ToastRootProps {\n  class?: HTMLAttributes['class']\n  variant?: ToastVariants['variant']\n  onOpenChange?: ((value: boolean) => void) | undefined\n}\n",
      "type": "registry:ui"
    }
  ]
}